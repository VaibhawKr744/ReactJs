{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Todo-app\\\\src\\\\Todo.js\";\nimport React, { Component } from \"react\";\nimport \"./Todo.css\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\n\nclass Todo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEditing: false,\n      task: this.props.task\n    };\n    this.handleRemove = this.handleRemove.bind(this);\n    this.toggleForm = this.toggleForm.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleUpdate = this.handleUpdate.bind(this);\n    this.handleToggle = this.handleToggle.bind(this);\n  }\n\n  handleRemove() {\n    this.props.removeTodo(this.props.id);\n  }\n\n  toggleForm() {\n    this.setState({\n      isEditing: !this.state.isEditing\n    });\n  }\n\n  handleUpdate(evt) {\n    evt.preventDefault(); //take new task data and pass up to parent\n\n    this.props.updateTodo(this.props.id, this.state.task);\n    this.setState({\n      isEditing: false\n    });\n  }\n\n  handleChange(evt) {\n    this.setState({\n      [evt.target.name]: evt.target.value\n    });\n  }\n\n  handleToggle(evt) {\n    this.props.toggleTodo(this.props.id);\n  }\n\n  render() {\n    let result;\n\n    if (this.state.isEditing) {\n      result = React.createElement(CSSTransition, {\n        key: \"editing\",\n        timeout: 500,\n        classNames: \"form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"Todo-edit-form\",\n        onSubmit: this.handleUpdate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.task,\n        name: \"task\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Save\")));\n    } else {\n      result = React.createElement(CSSTransition, {\n        key: \"normal\",\n        timeout: 500,\n        classNames: \"task-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"Todo-task\",\n        onClick: this.handleToggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, this.props.task));\n    }\n\n    return React.createElement(TransitionGroup, {\n      className: this.props.completed ? \"Todo completed\" : \"Todo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, result, React.createElement(\"div\", {\n      className: \"Todo-buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.toggleForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      class: \"fas fa-pen\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: this.handleRemove,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      class: \"fas fa-trash\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Todo;","map":{"version":3,"sources":["D:/Projects/Todo-app/src/Todo.js"],"names":["React","Component","CSSTransition","TransitionGroup","Todo","constructor","props","state","isEditing","task","handleRemove","bind","toggleForm","handleChange","handleUpdate","handleToggle","removeTodo","id","setState","evt","preventDefault","updateTodo","target","name","value","toggleTodo","render","result","completed"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Todo.css\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\n\r\nclass Todo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEditing: false,\r\n      task: this.props.task\r\n    };\r\n    this.handleRemove = this.handleRemove.bind(this);\r\n    this.toggleForm = this.toggleForm.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleUpdate = this.handleUpdate.bind(this);\r\n    this.handleToggle = this.handleToggle.bind(this);\r\n  }\r\n  handleRemove() {\r\n    this.props.removeTodo(this.props.id);\r\n  }\r\n  toggleForm() {\r\n    this.setState({ isEditing: !this.state.isEditing });\r\n  }\r\n  handleUpdate(evt) {\r\n    evt.preventDefault();\r\n    //take new task data and pass up to parent\r\n    this.props.updateTodo(this.props.id, this.state.task);\r\n    this.setState({ isEditing: false });\r\n  }\r\n  handleChange(evt) {\r\n    this.setState({\r\n      [evt.target.name]: evt.target.value\r\n    });\r\n  }\r\n  handleToggle(evt) {\r\n    this.props.toggleTodo(this.props.id);\r\n  }\r\n  render() {\r\n    let result;\r\n    if (this.state.isEditing) {\r\n      result = (\r\n        <CSSTransition key='editing' timeout={500} classNames='form'>\r\n          <form className='Todo-edit-form' onSubmit={this.handleUpdate}>\r\n            <input\r\n              type='text'\r\n              value={this.state.task}\r\n              name='task'\r\n              onChange={this.handleChange}\r\n            />\r\n            <button>Save</button>\r\n          </form>\r\n        </CSSTransition>\r\n      );\r\n    } else {\r\n      result = (\r\n        <CSSTransition key='normal' timeout={500} classNames='task-text'>\r\n          <li className='Todo-task' onClick={this.handleToggle}>\r\n            {this.props.task}\r\n          </li>\r\n        </CSSTransition>\r\n      );\r\n    }\r\n    return (\r\n      <TransitionGroup\r\n        className={this.props.completed ? \"Todo completed\" : \"Todo\"}\r\n      >\r\n        {result}\r\n        <div className='Todo-buttons'>\r\n          <button onClick={this.toggleForm}>\r\n            <i class='fas fa-pen' />\r\n          </button>\r\n          <button onClick={this.handleRemove}>\r\n            <i class='fas fa-trash' />\r\n          </button>\r\n        </div>\r\n      </TransitionGroup>\r\n    );\r\n  }\r\n}\r\nexport default Todo;\r\n"]},"metadata":{},"sourceType":"module"}