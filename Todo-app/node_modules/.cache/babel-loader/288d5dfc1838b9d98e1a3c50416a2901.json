{"ast":null,"code":"import _objectSpread from \"D:\\\\Projects\\\\Todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"D:\\\\Projects\\\\Todo-app\\\\src\\\\TodoList.js\";\nimport React, { Component } from 'react';\nimport NewTodoForm from './NewTodoForm';\nimport './TodoList.css';\nimport Todo from \"./Todo\";\n\nclass TodoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: []\n    };\n    this.create = this.create.bind(this);\n    this.remove = this.remove.bind(this);\n    this.update = this.update.bind(this);\n    this.toggleCompletion = this.toggleCompletion.bind(this);\n  }\n\n  create(newTodo) {\n    this.setState({\n      todos: [...this.state.todos, newTodo]\n    });\n  }\n\n  remove(id) {\n    this.setState({\n      todos: this.state.todos.filter(t => t.id !== id)\n    });\n  }\n\n  update(id, updatedTask) {\n    const updatedTodos = this.state.todos.map(todo => {\n      if (todo.id === id) {\n        return _objectSpread({}, todo, {\n          task: updatedTask\n        });\n      }\n\n      return todo;\n    });\n    this.setState({\n      todos: updatedTodos\n    });\n  }\n\n  toggleCompletion(id) {\n    const updatedTodos = this.state.todos.map(todo => {\n      if (todo.id === id) {\n        return _objectSpread({}, todo, {\n          completed: !todo.completed\n        });\n      }\n\n      return todo;\n    });\n    this.setState({\n      todos: updatedTodos\n    });\n  }\n\n  render() {\n    const todos = this.state.todos.map(todo => {\n      return React.createElement(Todo, {\n        key: todo.id,\n        id: todo.id,\n        task: todo.task,\n        removeTodo: this.remove,\n        updateTodo: this.update,\n        completed: todo.completed,\n        toggleTodo: this.toggleCompletion,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      className: \"TodoList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Todo List!\", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"A simple React Todo-List app\")), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, todos), React.createElement(NewTodoForm, {\n      createTodo: this.create,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["D:/Projects/Todo-app/src/TodoList.js"],"names":["React","Component","NewTodoForm","Todo","TodoList","constructor","props","state","todos","create","bind","remove","update","toggleCompletion","newTodo","setState","id","filter","t","updatedTask","updatedTodos","map","todo","task","completed","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport NewTodoForm from './NewTodoForm';\r\nimport './TodoList.css'\r\nimport Todo from \"./Todo\";\r\nclass TodoList extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            todos:[]\r\n        };\r\n        this.create = this.create.bind(this);\r\n        this.remove = this.remove.bind(this);\r\n        this.update = this.update.bind(this);\r\n        this.toggleCompletion= this.toggleCompletion.bind(this);\r\n    }\r\n    create(newTodo){\r\n        this.setState({\r\n            todos:[...this.state.todos, newTodo]\r\n        });\r\n    }\r\n    remove(id){\r\n        this.setState({\r\n          todos:this.state.todos.filter(t => t.id !== id)\r\n        });\r\n    }\r\n    update(id, updatedTask){\r\n        const updatedTodos = this.state.todos.map(todo => {\r\n            if(todo.id=== id) {\r\n                return {...todo, task:updatedTask};\r\n            }\r\n            return todo;\r\n        });\r\n        this.setState({ todos: updatedTodos});\r\n    }\r\n    toggleCompletion(id){\r\n        const updatedTodos = this.state.todos.map(todo => {\r\n            if(todo.id=== id) {\r\n                return {...todo, completed: !todo.completed};\r\n            }\r\n            return todo;\r\n        });\r\n        this.setState({ todos: updatedTodos}); \r\n    }\r\n    render() {\r\n        const todos = this.state.todos.map(todo =>{\r\n            return <Todo\r\n                     key={todo.id}\r\n                     id={todo.id}\r\n                     task={todo.task}\r\n                     removeTodo={this.remove}\r\n                     updateTodo={this.update}\r\n                     completed={todo.completed}\r\n                     toggleTodo={this.toggleCompletion} />\r\n        });\r\n        return (\r\n            <div className='TodoList'>\r\n                <h1>Todo List!<span>A simple React Todo-List app</span></h1>\r\n                \r\n                <ul>{todos}</ul>\r\n                <NewTodoForm createTodo={this.create}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoList;\r\n"]},"metadata":{},"sourceType":"module"}